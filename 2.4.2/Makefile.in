.PHONY: strip clean

# Variables
CC = @CC@ @ARCH@ @LTO@ @STD@
CFLAGS = @CFLAGS@ @XML_CFLAGS@ @GTHREAD_CFLAGS@ @GLIB_CFLAGS@ @GTOP_CFLAGS@ \
	@PNG_CFLAGS@ @FREETYPE_CFLAGS@ @GTK_CFLAGS@ @GLEW_CFLAGS@ @SDL_CFLAGS@ \
	@GLFW_CFLAGS@ @JBW@ @FONT@ @PRECISION@ @GRAPHIC@ -O3 -pedantic -Wall \
	-Wextra
LDFLAGS = @LDFLAGS@ @XML_LIBS@ @GTHREAD_LIBS@ @GLIB_LIBS@ @GTOP_LIBS@ \
	@PNG_LIBS@ @FREETYPE_LIBS@ @GTK_LIBS@ @GLEW_LIBS@ @SDL_LIBS@ @GLFW_LIBS@ \
	@LIBS@
EXEFLAGS = $(LDFLAGS) -L. -Wl,@RPATH@ -ljb
src = jb_config.h jb_def.h jb_def.c jb_math.h jb_math.c jb_win.h jb_win.c \
	jb_xml.h jb_xml.c
obj = jb_def.o jb_math.o jb_win.o jb_xml.o
exe = libjb@SO@ libjbm@SO@ libjbw@SO@ libjbxml@SO@ test_math@EXE@ test_win@EXE@
locale = locale/
es = $(locale)es/LC_MESSAGES/
fr = $(locale)fr/LC_MESSAGES/
it = $(locale)it/LC_MESSAGES/
pot = $(locale)jb.pot
locales = $(es)jb.mo $(fr)jb.mo $(it)jb.mo

# Default building
all: $(exe) $(locales) doc/latex/refman.pdf

# Objects
jb_def.o: jb_def.c jb_def.h jb_config.h Makefile
	$(CC) $(CFLAGS) -c -fPIC jb_def.c -o jb_def.o
jb_math.o: jb_math.c jb_math.h jb_def.h jb_config.h Makefile
	$(CC) $(CFLAGS) -c -fPIC jb_math.c -o jb_math.o
jb_win.o: jb_win.c jb_win.h jb_math.h jb_def.h jb_config.h Makefile
	$(CC) $(CFLAGS) -c -fPIC jb_win.c -o jb_win.o
jb_xml.o: jb_xml.c jb_xml.h jb_math.h jb_def.h jb_config.h Makefile
	$(CC) $(CFLAGS) -c -fPIC jb_xml.c -o jb_xml.o

# Dynamic libraries
libjb@SO@: jb_def.o
	$(CC) -shared jb_def.o $(LDFLAGS) -o libjb@SO@
libjbm@SO@: jb_math.o libjb@SO@
	$(CC) -shared jb_math.o $(EXEFLAGS) -o libjbm@SO@ -ljb
libjbw@SO@: jb_win.o libjb@SO@ libjbm@SO@
	$(CC) -shared jb_win.o $(EXEFLAGS) -o libjbw@SO@ -ljb -ljbm
libjbxml@SO@: jb_xml.o libjb@SO@ libjbm@SO@
	$(CC) -shared jb_xml.o $(EXEFLAGS) -o libjbxml@SO@ -ljb -ljbm

# Tests
test_math@EXE@: test_math.c libjb@SO@ libjbm@SO@
	$(CC) $(CFLAGS) test_math.c -o test_math@EXE@ $(EXEFLAGS) -ljbm
test_win@EXE@: test_win.c libjb@SO@ libjbm@SO@ libjbw@SO@
	$(CC) $(CFLAGS) test_win.c -o test_win@EXE@ $(EXEFLAGS) -ljbm -ljbw

# Locales
locales = es fr it
$(pot): $(src) Makefile
	if ! test -d $(locale); then mkdir -p $(locale); fi
	xgettext -k_ -d jb -o $(pot) --from-code=UTF-8 $(src)
	$(foreach i,$(locales), \
		if ! test -d $($i); then mkdir -p $($i); fi; \
	  if ! test -f $($i)jb.po; then \
			msginit -l $i -i $(pot) -o $($i)jb.po --no-translator; \
		else \
			msgmerge -U $($i)jb.po $(pot); \
		fi; \
		vim $($i)jb.po;)
$(es)jb.mo: $(pot) $(es)jb.po
	msgfmt -c -v $(es)jb.po -o $(es)jb.mo
$(fr)jb.mo: $(pot) $(fr)jb.po
	msgfmt -c -v $(fr)jb.po -o $(fr)jb.mo
$(it)jb.mo: $(pot) $(it)jb.po
	msgfmt -c -v $(it)jb.po -o $(it)jb.mo

# Documentation
doc/latex/refman.pdf: $(src) Doxyfile Makefile
	doxygen
	cd doc/latex; pdflatex refman; pdflatex refman;

# Final version
strip:
	make
	strip $(exe)

# Clean
clean:
	rm -rf doc $(exe) *.o 
